{"version":3,"sources":["types/TodoStatus.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoStatus","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","isTodoSelected","id","completed","title","type","onClick","classNames","TodoFilter","handleStatus","handleQuery","resetQuery","query","status","onSubmit","event","preventDefault","value","onChange","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","loadTodosFromServer","a","userId","useEffect","cn","href","email","name","App","setTodos","setQuery","setStatus","isLoading","setIsLoading","todosFromServer","todoCheck","todoTitleCheck","toLowerCase","includes","todoIdCheck","visibleTodos","filter","checkStatus","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5fc9ad3.chunk.js","sourcesContent":["export enum TodoStatus {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const isTodoSelected = todo === selectedTodo;\n\n        return (\n          <tr data-cy=\"todo\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye-slash': isTodoSelected,\n                    'fa-eye': !isTodoSelected,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { TodoStatus } from '../../types/TodoStatus';\n\ntype Props = {\n  handleStatus: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  handleQuery: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  resetQuery: () => void,\n  query: string | number,\n  status: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  handleStatus,\n  handleQuery,\n  resetQuery,\n  query,\n  status,\n}) => {\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(event) => {\n        event.preventDefault();\n      }}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleStatus}\n          >\n            <option value={TodoStatus.ALL}>All</option>\n            <option value={TodoStatus.ACTIVE}>Active</option>\n            <option value={TodoStatus.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-label=\"clear\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  setSelectedTodo: (todo: Todo | null) => void,\n  selectedTodo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const loadTodosFromServer = async () => {\n    setUser(await getUser(selectedTodo.userId));\n  };\n\n  useEffect(() => {\n    loadTodosFromServer();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={cn(\n                {\n                  'has-text-success': selectedTodo.completed,\n                  'has-text-danger': !selectedTodo.completed,\n                },\n              )}\n              >\n                {selectedTodo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoStatus } from './types/TodoStatus';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState<TodoStatus>(TodoStatus.ALL);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const loadTodosFromServer = async () => {\n    const todosFromServer = await getTodos();\n\n    setTodos(todosFromServer);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    loadTodosFromServer();\n  }, []);\n\n  const handleStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setStatus(event.target.value as TodoStatus);\n  };\n\n  const resetQuery = () => setQuery('');\n\n  const includeQueryCheck = (item: string) => item.toLowerCase()\n    .includes(query.toLowerCase());\n\n  const todoCheck = (todo: Todo) => {\n    const todoTitleCheck = includeQueryCheck(todo.title);\n    const todoIdCheck = todo.id === +query;\n\n    return todoTitleCheck || todoIdCheck;\n  };\n\n  const checkStatus = (todo: Todo) => {\n    switch (status) {\n      case TodoStatus.ALL:\n        return todo;\n      case TodoStatus.ACTIVE:\n        return !todo.completed;\n      case TodoStatus.COMPLETED:\n        return todo.completed;\n      default:\n        return todo;\n    }\n  };\n\n  const visibleTodos = todos\n    .filter(todo => todoCheck(todo) && checkStatus(todo));\n\n  const queryHandler = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => setQuery(event.target.value);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                status={status}\n                resetQuery={resetQuery}\n                handleQuery={queryHandler}\n                handleStatus={handleStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (\n                  <Loader />\n                )\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n        && (\n          <TodoModal\n            setSelectedTodo={setSelectedTodo}\n            selectedTodo={selectedTodo}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}